<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Aaditi Singhal | Portfolio</title>
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;600&display=swap" rel="stylesheet">
  <style>
    :root {
      --primary-color: #7e3ff2;
      --background-color: #0f0f1a;
      --text-color: #ffffff;
      --accent-color: #ae85ff;
    }

    * {
      box-sizing: border-box;
      margin: 0;
      padding: 0;
      font-family: 'Poppins', sans-serif;
    }

    body {
      background: linear-gradient(135deg, #0f0f1a, #1b0f2e);
      color: var(--text-color);
      overflow-x: hidden;
      position: relative;
    }

    body::before {
      content: "";
      position: fixed;
      top: 0;
      left: 0;
      width: 100vw;
      height: 100vh;
      background: linear-gradient(45deg, #000000, #7e3ff2, #ffffff);
      background-size: 400% 400%;
      animation: waveGradient 15s ease infinite;
      z-index: -10;
      opacity: 0.3;
    }

    @keyframes waveGradient {
      0% { background-position: 0% 50%; }
      50% { background-position: 100% 50%; }
      100% { background-position: 0% 50%; }
    }

    canvas#constellation {
      position: absolute;
      top: 0;
      left: 0;
      z-index: -1;
    }

    #code-background {
      position: fixed;
      bottom: 0;
      left: 0;
      width: 100%;
      height: 30vh;
      background: url('https://cdn.jsdelivr.net/gh/raj457036/code-bg/code-bg.gif') bottom center / cover no-repeat;
      opacity: 0.07;
      z-index: -2;
      pointer-events: none;
    }

    nav {
      background: rgba(15, 15, 26, 0.85);
      padding: 1rem;
      text-align: center;
      position: sticky;
      top: 0;
      z-index: 100;
    }

    nav a {
      color: var(--accent-color);
      text-decoration: none;
      margin: 0 1rem;
      font-weight: 600;
      transition: color 0.3s ease;
    }

    nav a:hover {
      color: var(--primary-color);
    }

    header {
      background-color: transparent;
      text-align: center;
      padding: 5rem 1rem 3rem;
      animation: fadeIn 1s ease-in-out;
    }

    header img.profile-pic {
      width: 120px;
      height: 120px;
      border-radius: 50%;
      object-fit: cover;
      margin-bottom: 1rem;
      box-shadow: 0 0 10px rgba(174, 133, 255, 0.5);
    }

    header h1 {
      font-size: 3rem;
      color: var(--primary-color);
    }

    header p {
      font-size: 1.2rem;
      color: var(--accent-color);
    }

    section {
      padding: 4rem 2rem;
      max-width: 1000px;
      margin: auto;
    }

    section p {
      font-size: 1.1rem;
      line-height: 1.6;
      color: var(--text-color);
    }

    h2 {
      color: var(--primary-color);
      margin-bottom: 1rem;
    }

    a {
      color: var(--accent-color);
      text-decoration: none;
    }

    footer {
      text-align: center;
      padding: 2rem;
      color: #999;
    }

    @keyframes fadeIn {
      from {opacity: 0; transform: translateY(-10px);}
      to {opacity: 1; transform: translateY(0);}
    }
  </style>
</head>
<body>
  <canvas id="constellation"></canvas>
  <div id="code-background"></div>

  <nav>
    <a href="#about">About</a>
    <a href="#projects">Projects</a>
    <a href="#skills">Skills</a>
    <a href="#resume">Resume</a>
    <a href="#contact">Contact</a>
  </nav>

  <header>
    <img src="aaditi-headshot.jpg" alt="Aaditi Singhal" class="profile-pic">
    <h1>Aaditi Singhal</h1>
    <p>Python Developer | Web Designer | Creative Technologist</p>
  </header>

  <section id="about">
    <h2>About Me</h2>
    <p>I am Aaditi, a passionate and detail-oriented developer and designer, blending logic with creativity to bring ideas to life. With experience in Python, HTML, CSS, and an eye for elegant UI/UX, I build digital solutions that are functional, aesthetic, and impactful.</p>
  </section>

  <section id="projects">
    <h2>Projects</h2>
    <p>Explore some of my recent work, from web applications and automation scripts to UI prototypes and design showcases. Each project reflects my approach to solving real-world problems through code and creativity.</p>
  </section>

  <section id="skills">
    <h2>Skills</h2>
    <p>Languages: Python, HTML, CSS, JavaScript<br>Tools: Git, Figma, Canva<br>Concepts: OOP, Responsive Design, UX Research</p>
  </section>

  <section id="resume">
    <h2>Resume</h2>
    <p>Download my resume to explore my academic background, technical proficiencies, leadership roles, and achievements. I bring a multidisciplinary perspective and strive for excellence in every pursuit.</p>
  </section>

  <section id="contact">
    <h2>Contact Me</h2>
    <p>Feel free to reach out via email at aaditi@example.com or connect with me on LinkedIn. Letâ€™s build something meaningful together!</p>
  </section>

  <footer>
    <p>&copy; 2025 Aaditi Singhal. All rights reserved.</p>
  </footer>

  <script>
    const canvas = document.getElementById("constellation");
    const ctx = canvas.getContext("2d");
    let width, height, stars;

    function initCanvas() {
      width = canvas.width = window.innerWidth;
      height = canvas.height = window.innerHeight;
      stars = Array.from({length: 100}, () => ({
        x: Math.random() * width,
        y: Math.random() * height,
        vx: (Math.random() - 0.5) * 0.5,
        vy: (Math.random() - 0.5) * 0.5
      }));
    }

    function animate() {
      ctx.clearRect(0, 0, width, height);
      stars.forEach((star, i) => {
        star.x += star.vx;
        star.y += star.vy;

        if (star.x < 0 || star.x > width) star.vx *= -1;
        if (star.y < 0 || star.y > height) star.vy *= -1;

        ctx.beginPath();
        ctx.arc(star.x, star.y, 1.5, 0, Math.PI * 2);
        ctx.fillStyle = "#ae85ff";
        ctx.fill();

        for (let j = i + 1; j < stars.length; j++) {
          const dx = star.x - stars[j].x;
          const dy = star.y - stars[j].y;
          const dist = Math.sqrt(dx * dx + dy * dy);
          if (dist < 100) {
            ctx.beginPath();
            ctx.moveTo(star.x, star.y);
            ctx.lineTo(stars[j].x, stars[j].y);
            ctx.strokeStyle = "rgba(174,133,255,0.1)";
            ctx.stroke();
          }
        }
      });
      requestAnimationFrame(animate);
    }

    window.addEventListener("resize", initCanvas);
    initCanvas();
    animate();
  </script>
</body>
</html>
